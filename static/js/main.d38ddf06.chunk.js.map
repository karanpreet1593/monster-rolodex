{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.components.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","catch","err","console","log","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","react","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BADtB,IAEA,6BAAML,EAAMI,QAAQE,OACpB,4BAAIN,EAAMI,QAAQG,YCJbC,G,MAAS,SAACR,GACnB,OACI,qBAAKC,UAAU,YAAf,SAEID,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNpBM,G,MAAY,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,aACpC,OACI,uBACAZ,UAAU,aACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC8BHG,E,kDAhCb,aAAc,IAAD,8BACX,gBACKC,MAAM,CACPR,SAAS,GACTS,YAAY,IAJL,E,qDAOb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAASc,OACtCE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,qBAAsBF,Q,oBAElD,WAAS,IAAD,OACN,EAA+BG,KAAKZ,MAA7BR,EAAP,EAAOA,SAAUS,EAAjB,EAAiBA,YACXY,EAAmBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQE,KAAK0B,cAAcC,SAASf,EAAYc,kBAClD,OACE,sBAAK/B,UAAU,MAAf,UACI,iDACA,cAAC,EAAD,CACAA,UAAU,SACVW,YAAY,kBACZC,aAAc,SAAAqB,GAAK,EAAKV,SAAS,CAACN,YAAYgB,EAAEC,OAAOC,WAEvD,cAAC,EAAD,CAAU3B,SAAUqB,W,GA1BZO,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d38ddf06.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = (props) => {\n    return(\n        <div className='card-container' >\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>;\n        <h2 >{props.monster.name}</h2>\n        <p>{props.monster.email}</p>\n        </div>\n    )\n         \n}","import React from 'react';\nimport { Card } from '../card/card.component';\nimport './card-list.styles.css';\n\nexport const CardList=(props) =>{\n    return(\n        <div className='card-list'>\n        {\n            props.monsters.map(monster =>(\n              <Card key={monster.id} monster={monster} />\n            ))\n          }\n        </div>\n    );\n};\n","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({placeholder, handleChange}) =>{\n    return(\n        <input \n        className='search-box'\n        type='search'\n        placeholder={placeholder}\n        onChange={handleChange} />\n    );\n}","import react from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.components';\nimport { SearchBox } from './components/search-box/search-box.component';\n\n\nclass App extends react.Component {\n  constructor(){\n    super();\n    this.state={\n        monsters:[],\n        searchField:''\n    }\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json() )\n    .then(users => this.setState({monsters:users}))\n    .catch(err => console.log('oops error occured', err))\n  }\n  render(){\n    const {monsters, searchField}= this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()) )\n    return (\n      <div className=\"App\">\n          <h1>Monster Rolodex</h1>\n          <SearchBox\n          className='search'\n          placeholder='search monsters'\n          handleChange={e =>{this.setState({searchField:e.target.value})}}\n          />\n          <CardList monsters={filteredMonsters}></CardList>\n       </div>\n    );\n  }\n \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}